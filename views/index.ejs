<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat App</title>
    <link rel="stylesheet" href="/styles.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #36393F;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }

        h1 {
            color: #ffffff;
            margin-bottom: 10px;
        }

        #chat-container {
            background: #2F3136;
            width: 800px;
            max-width: 90%;
            height: 80vh;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
            display: flex;
            flex-direction: column;
            gap: 15px;
            overflow: hidden;
        }

        #messages {
            flex: 1;
            overflow-y: auto;
            border-radius: 10px;
            padding: 15px;
            background: #36393F;
            border: 1px solid #7289DA;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .message {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 10px;
            border-radius: 10px;
            max-width: 80%;
            word-wrap: break-word;
        }

        .message p {
            background: #40444B;
            padding: 10px;
            border-radius: 10px;
            color: white;
            margin: 0;
        }

        .message.sent {
            align-self: flex-end;
            flex-direction: row-reverse;
        }

        .message.sent p {
            background: #7289DA;
        }

        .message.received {
            align-self: flex-start;
        }

        .message img {
            max-width: 200px;
            border-radius: 10px;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .message img:hover {
            transform: scale(1.05);
        }

        #input-container {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 10px;
            background: #40444B;
            border-radius: 10px;
            border: 1px solid #7289DA;
        }

        #imageInput {
            display: none;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
        }

        input {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 5px;
            background: #40444B;
            color: white;
            outline: none;
        }

        button {
            background: #7289DA;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
        }

        button:hover {
            background: #5B6EAE;
        }

        /* Image Zoom Modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            max-width: 90%;
            max-height: 90%;
            border-radius: 10px;
        }

        .close {
            position: absolute;
            top: 15px;
            right: 25px;
            color: white;
            font-size: 30px;
            cursor: pointer;
        }

        #signIn {
            color: white;
            text-decoration: none;
            border: 2px solid white;
            border-radius: 7px;
            padding: 5px 10px;
            font-size: 16px;
            transform: scale(1.2);
            transition: all 0.3s ease-in-out;
        }

        #signIn:hover {
            background: white;
            color: #36393F;
            transform: scale(1.3);
        }

        input::placeholder {
            color: white;
            opacity: 0.6;
        }
    </style>
</head>

<body>
    <div style="position: absolute; top: 15px; right: 20px;">
        <a id="signIn" href="/user/signin">Sign In</a>
    </div>
    <h1>Chat App</h1>
    <div id="chat-container">
        <div id="messages"></div>
        <div id="input-container">
            <label for="imageInput">
                <img src="/images/userdefault.png" alt="User" class="user-avatar">
            </label>
            <input type="file" id="imageInput" accept="image/*">
            <input type="text" id="message" placeholder="Enter your message">
            <button id="send">Send</button>
        </div>
    </div>

    <!-- Image Zoom Modal -->
    <div id="imageModal" class="modal">
        <span class="close">&times;</span>
        <img class="modal-content" id="zoomedImage">
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const sendBtn = document.getElementById('send');
        const msgInput = document.getElementById('message');
        const allmsgs = document.getElementById('messages');
        const imginput = document.getElementById("imageInput");

        const modal = document.getElementById("imageModal");
        const modalImg = document.getElementById("zoomedImage");
        const closeModal = document.querySelector(".close");

        function addMessage(content, type = "received", isImage = false) {
            const div = document.createElement("div");
            div.classList.add("message", type);

            if (isImage) {
                const img = document.createElement("img");
                img.src = content;
                img.addEventListener("click", () => openModal(content));
                div.appendChild(img);
            } else {
                const p = document.createElement("p");
                p.innerText = content;
                div.appendChild(p);
            }

            allmsgs.appendChild(div);
            allmsgs.scrollTop = allmsgs.scrollHeight;
        }

        function openModal(imageSrc) {
            modal.style.display = "flex";
            modalImg.src = imageSrc;
        }

        closeModal.addEventListener("click", () => {
            modal.style.display = "none";
        });

        modal.addEventListener("click", (e) => {
            if (e.target === modal) {
                modal.style.display = "none";
            }
        });

        socket.on("message", message => {
            addMessage(message, "received");
        });

        sendBtn.addEventListener("click", () => {
            const message = msgInput.value.trim();
            const file = imginput.files[0];

            if (file) {
                const formData = new FormData();
                formData.append("image", file);

                fetch("/upload", {
                    method: "POST",
                    body: formData,
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.imageurl) {
                            socket.emit("image", { text: message, imageUrl: data.imageurl });
                            if (message) addMessage(message, "sent");
                            addMessage(data.imageurl, "sent", true);
                            msgInput.value = "";
                            imginput.value = "";
                        }
                    })
                    .catch(err => console.error("Error uploading image:", err));

            } else if (message !== "") {
                socket.emit("user_message", message);
                addMessage(message, "sent");
                msgInput.value = "";
            }
        });

        msgInput.addEventListener("keypress", (e) => {
            if (e.key === "Enter") {
                sendBtn.click();
            }
        });

        socket.on("image_msg", ({ text, imageUrl }) => {
            if (text) addMessage(text, "received");
            if (imageUrl) addMessage(imageUrl, "received", true);
        });

    </script>
</body>

</html>